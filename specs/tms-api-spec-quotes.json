{
  "paths": {
    "/quotes": {
      "post": {
        "tags": ["Quote Management"],
        "summary": "Create a new quote request",
        "description": "Creates a new shipping quote request. The response includes one or more route options with associated costs and schedules.",
        "operationId": "createQuote",
        "parameters": [
          {
            "$ref": "#/components/parameters/correlationId"
          },
          {
            "$ref": "#/components/parameters/idempotencyKey"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QuoteRequest"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Quote request accepted for processing",
            "headers": {
              "Location": {
                "description": "URL to check quote status",
                "schema": {
                  "type": "string",
                  "format": "uri"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QuoteAccepted"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/401Unauthorized"
          },
          "429": {
            "$ref": "#/components/responses/429TooManyRequests"
          }
        }
      }
    },
    "/quotes/{quoteId}": {
      "get": {
        "tags": ["Quote Management"],
        "summary": "Retrieve a quote",
        "description": "Retrieves the current state of a quote request including all available options if processing is complete.",
        "operationId": "getQuote",
        "parameters": [
          {
            "name": "quoteId",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the quote",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "$ref": "#/components/parameters/correlationId"
          }
        ],
        "responses": {
          "200": {
            "description": "Quote retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QuoteResponse"
                }
              }
            }
          },
          "404": {
            "description": "Quote not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "QuoteRequest": {
        "type": "object",
        "required": ["routingDetails", "cargoDetails"],
        "description": "Request for a shipping quote",
        "properties": {
          "routingDetails": {
            "$ref": "#/components/schemas/RoutingDetails"
          },
          "cargoDetails": {
            "$ref": "#/components/schemas/CargoDetails"
          },
          "serviceRequirements": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ServiceRequirement"
            }
          },
          "preferredCarriers": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Preferred carrier codes"
          },
          "contractReferences": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContractReference"
            }
          }
        }
      },
      "ServiceRequirement": {
        "type": "object",
        "required": ["type"],
        "description": "Specific service requirement",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "TEMPERATURE_CONTROLLED",
              "HAZARDOUS",
              "OVERSIZED",
              "EXPRESS",
              "DOOR_TO_DOOR"
            ],
            "description": "Type of service required"
          },
          "details": {
            "type": "object",
            "additionalProperties": true,
            "description": "Service-specific details"
          },
          "priority": {
            "type": "string",
            "enum": ["REQUIRED", "PREFERRED", "OPTIONAL"],
            "description": "Requirement priority"
          }
        }
      },
      "QuoteOption": {
        "type": "object",
        "required": ["optionId", "route", "pricing", "transitTime"],
        "description": "Individual quote option",
        "properties": {
          "optionId": {
            "type": "string",
            "description": "Unique identifier for this option"
          },
          "carrier": {
            "type": "string",
            "description": "Carrier providing the service"
          },
          "route": {
            "$ref": "#/components/schemas/RouteDetails"
          },
          "pricing": {
            "$ref": "#/components/schemas/QuotePricing"
          },
          "transitTime": {
            "$ref": "#/components/schemas/TransitTime"
          },
          "schedule": {
            "$ref": "#/components/schemas/Schedule"
          },
          "restrictions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ServiceRestriction"
            }
          },
          "validityPeriod": {
            "$ref": "#/components/schemas/DateRange"
          }
        }
      },
      "QuotePricing": {
        "type": "object",
        "required": ["totalAmount", "currency"],
        "description": "Pricing details for the quote",
        "properties": {
          "totalAmount": {
            "type": "number",
            "description": "Total price"
          },
          "currency": {
            "type": "string",
            "pattern": "^[A-Z]{3}$",
            "description": "Currency code"
          },
          "breakdown": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PriceComponent"
            }
          },
          "surcharges": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Surcharge"
            }
          },
          "discounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Discount"
            }
          }
        }
      },
      "PriceComponent": {
        "type": "object",
        "required": ["type", "amount"],
        "description": "Individual price component",
        "properties": {
          "type": {
            "type": "string",
            "enum": ["FREIGHT", "HANDLING", "DOCUMENTATION", "CUSTOMS", "INSURANCE"],
            "description": "Type of charge"
          },
          "amount": {
            "$ref": "#/components/schemas/MonetaryAmount"
          },
          "basis": {
            "type": "string",
            "description": "Calculation basis"
          },
          "rate": {
            "type": "number",
            "description": "Applied rate"
          }
        }
      },
      "ServiceRestriction": {
        "type": "object",
        "required": ["type", "description"],
        "description": "Service restriction or limitation",
        "properties": {
          "type": {
            "type": "string",
            "enum": ["WEIGHT", "DIMENSION", "COMMODITY", "DOCUMENTATION", "ROUTING"],
            "description": "Type of restriction"
          },
          "description": {
            "type": "string",
            "description": "Restriction details"
          },
          "applicability": {
            "type": "string",
            "enum": ["ALWAYS", "CONDITIONAL"],
            "description": "When restriction applies"
          },
          "conditions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Conditions for restriction"
          }
        }
      },
      "TemperatureRequirements": {
        "type": "object",
        "required": ["min", "max", "unit"],
        "description": "Temperature control requirements",
        "properties": {
          "min": {
            "type": "number",
            "description": "Minimum temperature",
            "example": 2
          },
          "max": {
            "type": "number",
            "description": "Maximum temperature",
            "example": 8
          },
          "unit": {
            "type": "string",
            "enum": ["CELSIUS", "FAHRENHEIT"],
            "description": "Temperature unit",
            "example": "CELSIUS"
          }
        }
      }
    }
  }
}