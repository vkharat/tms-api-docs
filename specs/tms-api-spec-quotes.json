{
  "openapi": "3.0.3",
  "info": {
    "title": "TMS API Quotes",
    "version": "1.0.0"
  },
  "paths": {
    "/quotes": {
      "get": {
        "summary": "List all quotes",
        "operationId": "listQuotes",
        "tags": ["Quote Management"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          { "$ref": "./tms-api-spec-common.json#/components/parameters/pageSize" },
          { "$ref": "./tms-api-spec-common.json#/components/parameters/pageNumber" },
          { "$ref": "./tms-api-spec-common.json#/components/parameters/sortBy" },
          { "$ref": "./tms-api-spec-common.json#/components/parameters/sortOrder" },
          {
            "name": "status",
            "in": "query",
            "description": "Filter by quote status",
            "schema": {
              "type": "string",
              "enum": ["DRAFT", "SENT", "ACCEPTED", "EXPIRED"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of quotes",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Quote"
                      }
                    },
                    "pagination": {
                      "type": "object",
                      "properties": {
                        "totalItems": { "type": "integer" },
                        "totalPages": { "type": "integer" },
                        "currentPage": { "type": "integer" }
                      }
                    }
                  }
                },
                "example": {
                  "data": [
                    {
                      "id": "123e4567-e89b-12d3-a456-426614174000",
                      "quoteId": "QT-2024-001",
                      "status": "SENT",
                      "origin": {
                        "type": "PORT",
                        "code": "USNYC",
                        "coordinates": {
                          "latitude": 40.7128,
                          "longitude": -74.0060
                        }
                      },
                      "destination": {
                        "type": "PORT",
                        "code": "NLRTM",
                        "coordinates": {
                          "latitude": 51.9225,
                          "longitude": 4.4792
                        }
                      },
                      "cargo": {
                        "type": "CONTAINER",
                        "quantity": 1,
                        "weight": {
                          "value": 20000,
                          "unit": "KG"
                        }
                      },
                      "rates": [
                        {
                          "amount": {
                            "value": 2500,
                            "currency": "USD"
                          }
                        }
                      ],
                      "validUntil": "2024-02-01T23:59:59Z"
                    }
                  ],
                  "pagination": {
                    "totalItems": 100,
                    "totalPages": 5,
                    "currentPage": 1
                  }
                }
              }
            }
          },
          "400": { "$ref": "./tms-api-spec-common.json#/components/responses/BadRequest" },
          "401": { "$ref": "./tms-api-spec-common.json#/components/responses/Unauthorized" }
        }
      },
      "post": {
        "summary": "Create a new quote",
        "operationId": "createQuote",
        "tags": ["Quote Management"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Quote"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Quote created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Quote"
                }
              }
            }
          },
          "400": { "$ref": "./tms-api-spec-common.json#/components/responses/BadRequest" },
          "401": { "$ref": "./tms-api-spec-common.json#/components/responses/Unauthorized" }
        }
      }
    },
    "/quotes/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "description": "Quote ID",
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "Get quote by ID",
        "operationId": "getQuoteById",
        "tags": ["Quote Management"],
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": {
            "description": "Quote details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Quote"
                }
              }
            }
          },
          "404": { "$ref": "./tms-api-spec-common.json#/components/responses/NotFound" },
          "401": { "$ref": "./tms-api-spec-common.json#/components/responses/Unauthorized" }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Quote": {
        "allOf": [
          {
            "$ref": "./tms-api-spec-common.json#/components/schemas/BaseEntity"
          },
          {
            "type": "object",
            "required": ["quoteId", "origin", "destination", "cargo"],
            "properties": {
              "quoteId": {
                "type": "string",
                "description": "Unique quote identifier"
              },
              "origin": {
                "$ref": "./tms-api-spec-common.json#/components/schemas/Location"
              },
              "destination": {
                "$ref": "./tms-api-spec-common.json#/components/schemas/Location"
              },
              "cargo": {
                "$ref": "#/components/schemas/Cargo"
              },
              "rates": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Rate"
                }
              },
              "validUntil": {
                "type": "string",
                "format": "date-time",
                "description": "Quote validity period"
              }
            }
          }
        ]
      },
      "QuoteRequest": {
        "type": "object",
        "required": ["origin", "destination", "cargo", "enquiry_type", "shipment_type"],
        "properties": {
          "reference": {
            "type": "string",
            "description": "Customer's reference number"
          },
          "enquiry_type": {
            "type": "string",
            "enum": ["spot", "contract", "dispatch"],
            "description": "Type of rate inquiry"
          },
          "shipment_type": {
            "type": "string",
            "enum": ["import", "export", "domestic"],
            "description": "Direction of shipment"
          },
          "bidding": {
            "type": "object",
            "description": "Optional bidding details",
            "properties": {
              "close_time": {
                "type": "string",
                "format": "date-time",
                "description": "When bidding closes"
              },
              "ceiling_rate": {
                "type": "number",
                "description": "Maximum acceptable rate"
              }
            }
          },
          "origin": {
            "type": "object",
            "required": ["address"],
            "properties": {
              "address": {
                "$ref": "./tms-api-spec-common.json#/components/schemas/Address"
              },
              "locationType": {
                "type": "string",
                "enum": ["PORT", "WAREHOUSE", "DOOR", "CFS", "RAIL_RAMP"],
                "default": "DOOR"
              },
              "handling": {
                "type": "object",
                "properties": {
                  "stuffing": {
                    "type": "string",
                    "enum": ["factory_stuff", "dock_stuff"],
                    "description": "Container stuffing location"
                  },
                  "customs": {
                    "type": "boolean",
                    "description": "Requires customs handling"
                  }
                }
              }
            }
          },
          "destination": {
            "type": "object",
            "required": ["address"],
            "properties": {
              "address": {
                "$ref": "./tms-api-spec-common.json#/components/schemas/Address"
              },
              "locationType": {
                "type": "string",
                "enum": ["PORT", "WAREHOUSE", "DOOR", "CFS", "RAIL_RAMP"],
                "default": "DOOR"
              },
              "handling": {
                "type": "object",
                "properties": {
                  "destuffing": {
                    "type": "string",
                    "enum": ["factory_destuff", "dock_destuff", "dpd_destuff"],
                    "description": "Container destuffing location"
                  },
                  "customs": {
                    "type": "boolean",
                    "description": "Requires customs handling"
                  }
                }
              }
            }
          },
          "cargo": {
            "type": "array",
            "items": {
              "allOf": [
                { "$ref": "./tms-api-spec-cargo.json#/components/schemas/Cargo" },
                {
                  "properties": {
                    "weight_type": {
                      "type": "string",
                      "enum": ["by_package", "total_shipment"],
                      "description": "How weight is calculated"
                    },
                    "value": {
                      "type": "object",
                      "properties": {
                        "amount": {
                          "type": "number"
                        },
                        "currency": {
                          "type": "string",
                          "pattern": "^[A-Z]{3}$"
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          "parties": {
            "type": "object",
            "description": "Involved parties",
            "properties": {
              "shipper_id": {
                "type": "string"
              },
              "consignee_id": {
                "type": "string"
              },
              "customer_id": {
                "type": "string"
              }
            }
          },
          "metadata": {
            "type": "object",
            "description": "Custom fields for extensibility",
            "additionalProperties": {
              "type": "string"
            },
            "maxProperties": 10
          }
        }
      },
      "CargoDetails": {
        "type": "object",
        "required": ["type", "quantity"],
        "description": "Cargo information for quote",
        "properties": {
          "type": {
            "type": "string",
            "enum": ["FCL", "LCL", "BULK", "BREAKBULK"],
            "description": "Type of cargo"
          },
          "quantity": {
            "type": "integer",
            "minimum": 1,
            "description": "Quantity of cargo units"
          },
          "weight": {
            "$ref": "#/components/schemas/Weight"
          },
          "volume": {
            "$ref": "#/components/schemas/Volume"
          },
          "dimensions": {
            "$ref": "#/components/schemas/Dimensions"
          },
          "hazardous": {
            "type": "boolean",
            "description": "Whether cargo is hazardous"
          },
          "hazmatDetails": {
            "$ref": "#/components/schemas/HazmatDetails"
          },
          "temperatureRequirements": {
            "$ref": "#/components/schemas/TemperatureRequirements"
          }
        }
      },
      "Weight": {
        "type": "object",
        "required": ["value", "unit"],
        "description": "Weight measurement",
        "properties": {
          "value": {
            "type": "number",
            "minimum": 0,
            "description": "Weight value"
          },
          "unit": {
            "type": "string",
            "enum": ["KG", "LB"],
            "description": "Weight unit"
          }
        }
      },
      "Volume": {
        "type": "object",
        "required": ["value", "unit"],
        "description": "Volume measurement",
        "properties": {
          "value": {
            "type": "number",
            "minimum": 0,
            "description": "Volume value"
          },
          "unit": {
            "type": "string",
            "enum": ["CBM", "CFT"],
            "description": "Volume unit"
          }
        }
      },
      "Dimensions": {
        "type": "object",
        "required": ["length", "width", "height", "unit"],
        "description": "Physical dimensions",
        "properties": {
          "length": {
            "type": "number",
            "minimum": 0,
            "description": "Length"
          },
          "width": {
            "type": "number",
            "minimum": 0,
            "description": "Width"
          },
          "height": {
            "type": "number",
            "minimum": 0,
            "description": "Height"
          },
          "unit": {
            "type": "string",
            "enum": ["CM", "IN"],
            "description": "Dimension unit"
          }
        }
      },
      "ServiceRequirement": {
        "type": "object",
        "required": ["type"],
        "description": "Service requirement for quote",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "TEMPERATURE_CONTROLLED",
              "HAZMAT_HANDLING",
              "INSURANCE",
              "CUSTOMS_CLEARANCE",
              "DOOR_TO_DOOR",
              "EXPRESS_SERVICE"
            ],
            "description": "Type of service required"
          },
          "details": {
            "type": "object",
            "additionalProperties": true,
            "description": "Service specific details"
          }
        }
      },
      "HazmatDetails": {
        "type": "object",
        "required": ["unNumber", "class"],
        "description": "Hazardous materials details",
        "properties": {
          "unNumber": {
            "type": "string",
            "pattern": "^UN\\d{4}$",
            "description": "UN number"
          },
          "class": {
            "type": "string",
            "description": "Hazard class"
          },
          "packingGroup": {
            "type": "string",
            "enum": ["I", "II", "III"],
            "description": "Packing group"
          },
          "properShippingName": {
            "type": "string",
            "description": "Proper shipping name"
          }
        }
      },
      "TemperatureRequirements": {
        "type": "object",
        "required": ["min", "max", "unit"],
        "description": "Temperature control requirements",
        "properties": {
          "min": {
            "type": "number",
            "description": "Minimum temperature"
          },
          "max": {
            "type": "number",
            "description": "Maximum temperature"
          },
          "unit": {
            "type": "string",
            "enum": ["CELSIUS", "FAHRENHEIT"],
            "description": "Temperature unit"
          }
        }
      }
    }
  }
}