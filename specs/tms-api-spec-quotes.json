{
  "paths": {
    "/quotes": {
      "post": {
        "tags": ["Quote Management"],
        "summary": "Create a new quote request",
        "description": "Creates a new shipping quote request. The response includes one or more route options with associated costs and schedules.",
        "operationId": "createQuote",
        "parameters": [
          {
            "$ref": "#/components/parameters/correlationId"
          },
          {
            "$ref": "#/components/parameters/idempotencyKey"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QuoteRequest"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Quote request accepted for processing",
            "headers": {
              "Location": {
                "description": "URL to check quote status",
                "schema": {
                  "type": "string",
                  "format": "uri"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QuoteAccepted"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/401Unauthorized"
          },
          "429": {
            "$ref": "#/components/responses/429TooManyRequests"
          }
        }
      }
    },
    "/quotes/{quoteId}": {
      "get": {
        "tags": ["Quote Management"],
        "summary": "Retrieve a quote",
        "description": "Retrieves the current state of a quote request including all available options if processing is complete.",
        "operationId": "getQuote",
        "parameters": [
          {
            "name": "quoteId",
            "in": "path",
            "required": true,
            "description": "Unique identifier of the quote",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "$ref": "#/components/parameters/correlationId"
          }
        ],
        "responses": {
          "200": {
            "description": "Quote retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QuoteResponse"
                }
              }
            }
          },
          "404": {
            "description": "Quote not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "QuoteRequest": {
        "type": "object",
        "required": ["cargoDetails", "routingDetails"],
        "properties": {
          "requestMetadata": {
            "$ref": "#/components/schemas/RequestMetadata"
          },
          "cargoDetails": {
            "$ref": "#/components/schemas/CargoDetails"
          },
          "routingDetails": {
            "$ref": "#/components/schemas/RoutingDetails"
          },
          "preferencesDetails": {
            "$ref": "#/components/schemas/PreferencesDetails"
          }
        }
      },
      "RequestMetadata": {
        "type": "object",
        "properties": {
          "clientReferenceId": {
            "type": "string",
            "description": "Client's internal reference number",
            "example": "PO-123456"
          },
          "validityPeriod": {
            "type": "integer",
            "description": "Number of days the quote should be valid",
            "minimum": 1,
            "maximum": 30,
            "default": 7,
            "example": 7
          }
        }
      },
      "CargoDetails": {
        "type": "object",
        "required": ["units"],
        "description": "Details about the cargo to be shipped",
        "properties": {
          "units": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CargoUnit"
            },
            "minItems": 1,
            "description": "List of cargo units to be shipped"
          },
          "hazardous": {
            "type": "boolean",
            "default": false,
            "description": "Indicates if any units contain hazardous materials"
          },
          "temperatureControlled": {
            "$ref": "#/components/schemas/TemperatureRequirements"
          }
        }
      },
      "CargoUnit": {
        "type": "object",
        "required": ["type", "quantity", "weight"],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "CONTAINER_20_STD",
              "CONTAINER_40_STD",
              "CONTAINER_40_HC",
              "PALLET_EUR",
              "CARTON"
            ],
            "description": "Type of cargo unit"
          },
          "quantity": {
            "type": "integer",
            "minimum": 1,
            "description": "Number of units of this type",
            "example": 2
          },
          "weight": {
            "$ref": "#/components/schemas/Weight"
          },
          "dimensions": {
            "$ref": "#/components/schemas/Dimensions"
          },
          "stackable": {
            "type": "boolean",
            "default": true,
            "description": "Indicates if units can be stacked"
          }
        }
      },
      "Weight": {
        "type": "object",
        "required": ["value", "unit"],
        "properties": {
          "value": {
            "type": "number",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Weight value",
            "example": 1000
          },
          "unit": {
            "type": "string",
            "enum": ["KG", "LB"],
            "description": "Weight unit",
            "example": "KG"
          }
        }
      },
      "Dimensions": {
        "type": "object",
        "required": ["length", "width", "height", "unit"],
        "properties": {
          "length": {
            "type": "number",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Length of the unit",
            "example": 120
          },
          "width": {
            "type": "number",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Width of the unit",
            "example": 80
          },
          "height": {
            "type": "number",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Height of the unit",
            "example": 140
          },
          "unit": {
            "type": "string",
            "enum": ["CM", "IN"],
            "description": "Dimension unit",
            "example": "CM"
          }
        }
      },
      "TemperatureRequirements": {
        "type": "object",
        "required": ["min", "max", "unit"],
        "properties": {
          "min": {
            "type": "number",
            "description": "Minimum temperature",
            "example": 2
          },
          "max": {
            "type": "number",
            "description": "Maximum temperature",
            "example": 8
          },
          "unit": {
            "type": "string",
            "enum": ["CELSIUS", "FAHRENHEIT"],
            "description": "Temperature unit",
            "example": "CELSIUS"
          }
        }
      }
    }
  }
}