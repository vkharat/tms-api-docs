{
  "openapi": "3.0.3",
  "info": {
    "title": "TMS API Common Components",
    "version": "1.0.0"
  },
  "components": {
    "parameters": {
      "pageSize": {
        "name": "pageSize",
        "in": "query",
        "description": "Number of records per page",
        "schema": {
          "type": "integer",
          "minimum": 1,
          "maximum": 100,
          "default": 20
        }
      },
      "pageNumber": {
        "name": "pageNumber",
        "in": "query",
        "description": "Page number",
        "schema": {
          "type": "integer",
          "minimum": 1,
          "default": 1
        }
      },
      "sortBy": {
        "name": "sortBy",
        "in": "query",
        "description": "Field to sort by",
        "schema": {
          "type": "string"
        }
      },
      "sortOrder": {
        "name": "sortOrder",
        "in": "query",
        "description": "Sort order (asc or desc)",
        "schema": {
          "type": "string",
          "enum": ["asc", "desc"],
          "default": "asc"
        }
      }
    },
    "responses": {
      "BadRequest": {
        "description": "Bad request",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "example": "BAD_REQUEST"
                },
                "message": {
                  "type": "string",
                  "example": "Invalid request parameters"
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "NotFound": {
        "description": "Resource not found",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "example": "NOT_FOUND"
                },
                "message": {
                  "type": "string",
                  "example": "Resource not found"
                }
              }
            }
          }
        }
      },
      "Unauthorized": {
        "description": "Unauthorized",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "example": "UNAUTHORIZED"
                },
                "message": {
                  "type": "string",
                  "example": "Authentication required"
                }
              }
            }
          }
        }
      }
    },
    "schemas": {
      "BaseEntity": {
        "type": "object",
        "required": ["id", "type", "status", "createdAt"],
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          },
          "type": {
            "type": "string",
            "description": "Entity type"
          },
          "status": {
            "type": "string",
            "description": "Current status"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Creation timestamp"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Last update timestamp"
          }
        }
      },
      "MonetaryAmount": {
        "type": "object",
        "required": ["value", "currency"],
        "properties": {
          "value": {
            "type": "number",
            "format": "double",
            "description": "Monetary value"
          },
          "currency": {
            "type": "string",
            "pattern": "^[A-Z]{3}$",
            "description": "ISO 4217 currency code"
          }
        }
      },
      "Location": {
        "type": "object",
        "required": ["type", "coordinates"],
        "properties": {
          "type": {
            "type": "string",
            "enum": ["PORT", "WAREHOUSE", "TERMINAL", "ADDRESS"]
          },
          "coordinates": {
            "$ref": "#/components/schemas/Coordinates"
          },
          "address": {
            "$ref": "#/components/schemas/Address"
          },
          "code": {
            "type": "string",
            "description": "Location code (e.g., UN/LOCODE)"
          }
        }
      },
      "Coordinates": {
        "type": "object",
        "required": ["latitude", "longitude"],
        "properties": {
          "latitude": {
            "type": "number",
            "format": "double",
            "minimum": -90,
            "maximum": 90
          },
          "longitude": {
            "type": "number",
            "format": "double",
            "minimum": -180,
            "maximum": 180
          }
        }
      },
      "Address": {
        "type": "object",
        "required": ["city", "country_code"],
        "properties": {
          "name": {
            "type": "string"
          },
          "address_line1": {
            "type": "string"
          },
          "address_line2": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "country_code": {
            "type": "string",
            "pattern": "^[A-Z]{2}$"
          },
          "postal_code": {
            "type": "string"
          },
          "port_code": {
            "type": "string",
            "description": "UN/LOCODE for ports"
          }
        }
      },
      "Duration": {
        "type": "object",
        "required": ["value", "unit"],
        "description": "Time duration",
        "properties": {
          "value": {
            "type": "number",
            "minimum": 0,
            "description": "Duration value",
            "example": 14
          },
          "unit": {
            "type": "string",
            "enum": ["MINUTES", "HOURS", "DAYS", "WEEKS"],
            "description": "Time unit"
          }
        }
      },
      "Distance": {
        "type": "object",
        "required": ["value", "unit"],
        "description": "Distance measurement",
        "properties": {
          "value": {
            "type": "number",
            "minimum": 0,
            "description": "Distance value",
            "example": 5280
          },
          "unit": {
            "type": "string",
            "enum": ["KM", "MI", "NM"],
            "description": "Distance unit (kilometers, miles, nautical miles)"
          }
        }
      },
      "DateRange": {
        "type": "object",
        "required": ["startDate", "endDate"],
        "description": "Date range with start and end dates",
        "properties": {
          "startDate": {
            "type": "string",
            "format": "date-time",
            "description": "Start date and time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time",
            "description": "End date and time"
          }
        }
      },
      "FreeTimeDetail": {
        "type": "object",
        "description": "Free time details for a specific location",
        "properties": {
          "duration": {
            "$ref": "#/components/schemas/Duration"
          },
          "startTrigger": {
            "type": "string",
            "enum": ["DISCHARGE", "GATE_IN", "GATE_OUT"],
            "description": "Event that starts the free time period"
          },
          "includesWeekends": {
            "type": "boolean",
            "description": "Whether weekends are included in free time calculation",
            "default": true
          },
          "includesHolidays": {
            "type": "boolean",
            "description": "Whether holidays are included in free time calculation",
            "default": false
          }
        }
      },
      "ReferenceNumbers": {
        "type": "object",
        "description": "Collection of reference numbers",
        "properties": {
          "bookingNumber": {
            "type": "string",
            "description": "Booking reference number",
            "example": "BOOK123456"
          },
          "customerReference": {
            "type": "string",
            "description": "Customer's reference number",
            "example": "PO-987654"
          },
          "contractNumber": {
            "type": "string",
            "description": "Contract or agreement number",
            "example": "CONT-2025-001"
          }
        }
      },
      "Contact": {
        "type": "object",
        "description": "Contact information",
        "properties": {
          "name": {
            "type": "string",
            "description": "Contact person's name"
          },
          "role": {
            "type": "string",
            "description": "Contact person's role"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "Email address"
          },
          "phone": {
            "type": "string",
            "pattern": "^\\+?[1-9]\\d{1,14}$",
            "description": "Phone number in E.164 format"
          },
          "availableHours": {
            "$ref": "#/components/schemas/OperatingSchedule"
          }
        }
      },
      "ExchangeRate": {
        "type": "object",
        "required": ["fromCurrency", "toCurrency", "rate", "date"],
        "description": "Currency exchange rate information",
        "properties": {
          "fromCurrency": {
            "type": "string",
            "pattern": "^[A-Z]{3}$",
            "description": "Source currency code"
          },
          "toCurrency": {
            "type": "string",
            "pattern": "^[A-Z]{3}$",
            "description": "Target currency code"
          },
          "rate": {
            "type": "number",
            "description": "Exchange rate value"
          },
          "date": {
            "type": "string",
            "format": "date",
            "description": "Date of the exchange rate"
          },
          "source": {
            "type": "string",
            "description": "Source of exchange rate data"
          }
        }
      },
      "Party": {
        "type": "object",
        "required": ["id", "type"],
        "properties": {
          "id": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": ["shipper", "consignee", "customer", "notify"]
          },
          "reference": {
            "type": "string"
          }
        }
      },
      "TimeWindow": {
        "type": "object",
        "required": ["start", "end"],
        "description": "Time window with start and end times",
        "properties": {
          "start": {
            "type": "string",
            "pattern": "^([01]\\d|2[0-3]):([0-5]\\d)$",
            "description": "Start time (HH:mm)"
          },
          "end": {
            "type": "string",
            "pattern": "^([01]\\d|2[0-3]):([0-5]\\d)$",
            "description": "End time (HH:mm)"
          }
        }
      },
      "OperatingSchedule": {
        "type": "object",
        "description": "Operating schedule information",
        "properties": {
          "weekdays": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/TimeWindow"
            }
          },
          "exceptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ScheduleException"
            }
          }
        }
      },
      "ScheduleException": {
        "type": "object",
        "required": ["date", "type"],
        "description": "Exception to regular schedule",
        "properties": {
          "date": {
            "type": "string",
            "format": "date",
            "description": "Exception date"
          },
          "type": {
            "type": "string",
            "enum": ["HOLIDAY", "SPECIAL_HOURS", "CLOSED"],
            "description": "Type of exception"
          },
          "hours": {
            "$ref": "#/components/schemas/TimeWindow"
          },
          "description": {
            "type": "string",
            "description": "Description of the exception"
          }
        }
      },
      "Money": {
        "type": "object",
        "required": ["amount", "currency"],
        "properties": {
          "amount": {
            "type": "number"
          },
          "currency": {
            "type": "string",
            "pattern": "^[A-Z]{3}$"
          }
        }
      },
      "DateTimeRange": {
        "type": "object",
        "properties": {
          "start": {
            "type": "string",
            "format": "date-time"
          },
          "end": {
            "type": "string",
            "format": "date-time"
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}