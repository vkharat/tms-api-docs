{
  "components": {
    "schemas": {
      "Error": {
        "type": "object",
        "required": ["code", "message"],
        "description": "Standard error response structure",
        "properties": {
          "code": {
            "type": "string",
            "description": "Machine-readable error code",
            "example": "INVALID_LOCATION"
          },
          "message": {
            "type": "string",
            "description": "Human-readable error message",
            "example": "The specified location is invalid"
          },
          "details": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ErrorDetail"
            }
          },
          "type": {
            "type": "string",
            "enum": ["VALIDATION", "BUSINESS", "TECHNICAL", "SECURITY"],
            "description": "Type of error"
          },
          "severity": {
            "type": "string",
            "enum": ["INFO", "WARNING", "ERROR", "CRITICAL"],
            "description": "Error severity level"
          },
          "domain": {
            "type": "string",
            "enum": ["VALIDATION", "BUSINESS", "TECHNICAL", "SECURITY"],
            "description": "Domain categorization of the error"
          },
          "correlationId": {
            "type": "string",
            "format": "uuid",
            "description": "Request correlation ID for tracking"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "When the error occurred"
          }
        }
      },
      "ErrorDetail": {
        "type": "object",
        "description": "Detailed error information",
        "properties": {
          "field": {
            "type": "string",
            "description": "Field that caused the error"
          },
          "value": {
            "type": "string",
            "description": "Invalid value"
          },
          "reason": {
            "type": "string",
            "description": "Reason for the error"
          },
          "suggestion": {
            "type": "string",
            "description": "Suggested correction"
          }
        }
      },
      "ValidationError": {
        "type": "object",
        "description": "Validation-specific error details",
        "allOf": [
          {
            "$ref": "#/components/schemas/Error"
          },
          {
            "properties": {
              "validationRules": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Failed validation rules"
              },
              "constraints": {
                "type": "object",
                "additionalProperties": true,
                "description": "Validation constraints"
              }
            }
          }
        ]
      },
      "BusinessError": {
        "type": "object",
        "description": "Business logic error details",
        "allOf": [
          {
            "$ref": "#/components/schemas/Error"
          },
          {
            "properties": {
              "businessRule": {
                "type": "string",
                "description": "Failed business rule"
              },
              "context": {
                "type": "object",
                "additionalProperties": true,
                "description": "Business context"
              }
            }
          }
        ]
      },
      "TechnicalError": {
        "type": "object",
        "description": "Technical/system error details",
        "allOf": [
          {
            "$ref": "#/components/schemas/Error"
          },
          {
            "properties": {
              "errorId": {
                "type": "string",
                "description": "Unique error identifier"
              },
              "component": {
                "type": "string",
                "description": "System component where error occurred"
              },
              "stackTrace": {
                "type": "string",
                "description": "Stack trace (only in development)"
              }
            }
          }
        ]
      },
      "RequestStatus": {
        "type": "object",
        "required": ["requestId", "status", "timestamp"],
        "description": "Current status of an asynchronous request",
        "properties": {
          "requestId": {
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for the request"
          },
          "status": {
            "type": "string",
            "enum": [
              "RECEIVED",
              "VALIDATING",
              "PROCESSING",
              "COMPLETED",
              "FAILED",
              "CANCELLED"
            ],
            "description": "Current status of the request"
          },
          "progress": {
            "type": "integer",
            "minimum": 0,
            "maximum": 100,
            "description": "Progress percentage if available"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "Last status update time"
          },
          "estimatedCompletion": {
            "type": "string",
            "format": "date-time",
            "description": "Estimated completion time"
          },
          "statusHistory": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StatusHistoryEntry"
            },
            "description": "History of status changes"
          },
          "currentStage": {
            "$ref": "#/components/schemas/ProcessingStage"
          }
        }
      },
      "StatusHistoryEntry": {
        "type": "object",
        "required": ["status", "timestamp"],
        "description": "Historical status entry",
        "properties": {
          "status": {
            "type": "string",
            "description": "Status at this point"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "When this status was recorded"
          },
          "details": {
            "type": "string",
            "description": "Additional status details"
          },
          "actor": {
            "type": "string",
            "description": "System or user that caused the status change"
          }
        }
      },
      "ProcessingStage": {
        "type": "object",
        "required": ["stage", "status"],
        "description": "Current processing stage information",
        "properties": {
          "stage": {
            "type": "string",
            "enum": [
              "VALIDATION",
              "RATE_LOOKUP",
              "CAPACITY_CHECK",
              "SCHEDULE_PLANNING",
              "COMPLIANCE_CHECK",
              "QUOTE_GENERATION"
            ],
            "description": "Current processing stage"
          },
          "status": {
            "type": "string",
            "enum": ["PENDING", "IN_PROGRESS", "COMPLETED", "FAILED"],
            "description": "Status of the current stage"
          },
          "startTime": {
            "type": "string",
            "format": "date-time",
            "description": "When this stage started"
          },
          "estimatedDuration": {
            "$ref": "#/components/schemas/Duration"
          },
          "dependencies": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Other stages this stage depends on"
          }
        }
      },
      "HealthStatus": {
        "type": "object",
        "required": ["status", "timestamp"],
        "description": "API health status information",
        "properties": {
          "status": {
            "type": "string",
            "enum": ["HEALTHY", "DEGRADED", "DOWN"],
            "description": "Overall health status"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "Status check time"
          },
          "components": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/ComponentHealth"
            },
            "description": "Status of individual components"
          },
          "metrics": {
            "type": "object",
            "properties": {
              "requestRate": {
                "type": "number",
                "description": "Requests per second"
              },
              "errorRate": {
                "type": "number",
                "description": "Errors per second"
              },
              "averageResponseTime": {
                "type": "number",
                "description": "Average response time in milliseconds"
              }
            }
          }
        }
      },
      "ComponentHealth": {
        "type": "object",
        "required": ["status"],
        "description": "Health status of an individual component",
        "properties": {
          "status": {
            "type": "string",
            "enum": ["HEALTHY", "DEGRADED", "DOWN"],
            "description": "Component health status"
          },
          "message": {
            "type": "string",
            "description": "Additional status information"
          },
          "lastChecked": {
            "type": "string",
            "format": "date-time",
            "description": "Last health check time"
          },
          "metrics": {
            "type": "object",
            "additionalProperties": true,
            "description": "Component-specific metrics"
          }
        }
      }
    }
  }
}